const express = require('express');
const app = express();
app.use(express.json());

const port = 3000;

module.exports = app;

const { aql } = require('arangojs');
const db = require('./database'); // Importa la instancia de la base de datos

const CommentModel = {
  collectionName: 'comments', // Nombre de la colecci贸n de comentarios

  // Funci贸n para crear un nuevo comentario
  async createComment(text, userId, postId) {
    try {
      const data = {
        text,
        userId,
        postId,
      };
      const cursor = await db.query(aql`INSERT ${data} INTO ${CommentModel.collectionName} RETURN NEW`);
      const createdComment = await cursor.next();
      return createdComment;
    } catch (error) {
      throw error;
    }
  },

  // Funci贸n para obtener todos los comentarios
  async getAllComments() {
    try {
      const cursor = await db.query(aql`FOR doc IN ${CommentModel.collectionName} RETURN doc`);
      const comments = await cursor.all();
      return comments;
    } catch (error) {
      throw error;
    }
  },

  // Funci贸n para obtener un comentario por su _id
  async getCommentById(commentId) {
    try {
      const cursor = await db.query(aql`FOR doc IN ${CommentModel.collectionName} FILTER doc._id == ${commentId} RETURN doc`);
      const comment = await cursor.next();
      return comment;
    } catch (error) {
      throw error;
    }
  },
};

module.exports = CommentModel;


const { Database } = require('arangojs');

const db = new Database({ url: 'http://localhost:8529', databaseName: '_system' });
db.useBasicAuth('root', '1234');

module.exports = db;


const { Database } = require('arangojs');

const db = new Database({ url: 'http://localhost:8529', databaseName: '_system' });
db.useBasicAuth('root', '1234');

module.exports = db;


const app = require('./app');
const routes = require('./routes');

app.use(routes);

const port = 3000;

app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});
